<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzfmy.mapper.OrderitemMapper" >
  <resultMap id="BaseResultMap" type="com.lzfmy.model.Orderitem" >
    <id column="itemid" property="itemid" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="subtotal" property="subtotal" jdbcType="DOUBLE" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="oid" property="oid" jdbcType="INTEGER" />
    <collection property="product" select="selectProductByPid" column="pid"></collection>
    <collection property="order" select="selectOrderByOid" column="oid"></collection>
  </resultMap>
  <resultMap id="ProductResultMap" type="com.lzfmy.model.Product" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="market_price" property="marketPrice" jdbcType="DOUBLE" />
    <result column="shop_price" property="shopPrice" jdbcType="DOUBLE" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="pdesc" property="pdesc" jdbcType="VARCHAR" />
    <result column="is_hot" property="isHot" jdbcType="INTEGER" />
    <result column="pdate" property="pdate" jdbcType="TIMESTAMP" />
    <result column="csid" property="csid" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectProductByPid" resultMap="ProductResultMap" parameterType="int">
    select * FROM product where pid = #{pid}
  </select>
  <select id="selectOrderByOid" resultType="com.lzfmy.model.Order" parameterType="int">
    select * FROM orders where oid = #{oid}
  </select>
  <sql id="Base_Column_List" >
    itemid, count, subtotal, pid, oid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderitem
    where itemid = #{itemid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderitem
    where itemid = #{itemid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lzfmy.model.Orderitem" >
    insert into orderitem (itemid, count, subtotal, 
      pid, oid)
    values (#{itemid,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, #{subtotal,jdbcType=DOUBLE}, 
      #{pid,jdbcType=INTEGER}, #{oid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lzfmy.model.Orderitem" >
    insert into orderitem
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemid != null" >
        itemid,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="subtotal != null" >
        subtotal,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="oid != null" >
        oid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemid != null" >
        #{itemid,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null" >
        #{subtotal,jdbcType=DOUBLE},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzfmy.model.Orderitem" >
    update orderitem
    <set >
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null" >
        subtotal = #{subtotal,jdbcType=DOUBLE},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="oid != null" >
        oid = #{oid,jdbcType=INTEGER},
      </if>
    </set>
    where itemid = #{itemid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzfmy.model.Orderitem" >
    update orderitem
    set count = #{count,jdbcType=INTEGER},
      subtotal = #{subtotal,jdbcType=DOUBLE},
      pid = #{pid,jdbcType=INTEGER},
      oid = #{oid,jdbcType=INTEGER}
    where itemid = #{itemid,jdbcType=INTEGER}
  </update>
</mapper>